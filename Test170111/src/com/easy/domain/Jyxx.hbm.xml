<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
   <!-- 配置表与实体对象的关系 -->
   <!-- package属性:填写一个包名.在元素内部凡是需要书写完整类名的属性,可以直接写简单类名了. -->
   
<hibernate-mapping package="com.easy.domain" >
	<!-- 
		class元素: 配置实体与表的对应关系的
			name: 完整类名
			table:数据库表名
	 -->
	<class name="Jyxx" table="jjyxx" >
		<!-- id元素:配置主键映射的属性
				name: 填写主键对应属性名
				column(可选): 填写表中的主键列名.默认值:列名会默认使用属性名
				type(可选):填写列(属性)的类型.hibernate会自动检测实体的属性类型.
						每个类型有三种填法: java类型|hibernate类型|数据库类型
				not-null(可选):配置该属性(列)是否不能为空. 默认值:false
				length(可选):配置数据库中列的长度. 默认值:使用数据库类型的最大长度
		 -->
		<id name="id"  >
			<!-- generator:主键生成策略
			自然主键：assigned   1.业务当中某个数据项 可以当做主键（不能重复 唯一如身份证号） 2.自己生成随机值（如uuid）
			代理主键：所有不用程序员自己赋主键值得策略
			uuid:Hibernate提供自动生成32位uuid值 
			Hilo：Hibernate提供Hilo使用高低位算法生成主键
			Sequence：  自增 Hibernate根据底层数据库序列生成标识符（oracle） 
			Identity：由底层数据库生成表识符。条件是数据库支持自动增长数据类型（Mysql）
			Increment：由 Hibernate 以递增的方式为代理主键赋值 返回（查询max（主键）+1） 
			Native：根据底层数据库对自动生成表示符的能力来选择identity、sequence、hilo
			-->
			<generator class="assigned"></generator>
		</id>
		<!-- property元素:除id之外的普通属性映射
				name: 填写属性名
				column(可选): 填写列名
				type(可选):填写列(属性)的类型.hibernate会自动检测实体的属性类型.
						每个类型有三种填法: java类型|hibernate类型|数据库类型  
            写法：  
     1）java写法（默认）  
                                                          整数：  java.lang.Integer  
                                                          字符串： java.lang.String  
                                                          小数：java.lang.Double/java.lang.Float  
                                                          布尔：java.lang.Boolean  
                                                          日期：java.util.Date  
                                                          日期时间： java.uitl.Date  
                                                          字符文件：java.lang.String  
                                                          字节文件：java.lang.Byte[]  
                                                            
    2）hibernate写法  
                                                          整数： integer  
                                                          字符串：string  
                                                          小数:double/float  
                                                          布尔： boolean  
                                                          日期： date  
                                                          日期时间：datetime  
                                                          字符文件：string  
                                                          字节文件：binary  
				not-null(可选):配置该属性(列)是否不能为空. 默认值:false
				length(可选):配置数据库中列的长度. 默认值:使用数据库类型的最大长度
		 -->
		<property name="jybh" column="jybh" >
			<!--  <column name="jybh" sql-type="varchar" ></column> -->
		</property>
		<property name="jyxm" column="jyxm" ></property>
		<property name="jyxb" column="jyxb" ></property>
		<property name="jycsrq" column="jycsrq" ></property>
		<property name="jyjg" column="jyjg" ></property>
		<property name="jyzw" column="jyzw" ></property>
		<property name="jyssdwdm" column="jyssdwdm" ></property>
		<property name="jyssdwmc" column="jyssdwmc" ></property>
		<property name="jyzt" column="jyzt" ></property>
		<property name="jybz" column="jybz" ></property>
	</class>
</hibernate-mapping>